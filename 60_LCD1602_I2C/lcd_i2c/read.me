Para usar esta librería:
- Copiar la carpeta "lcd_i2c" al directorio raíz del proyecto
- En el CMakeList.txt del proyecto AGREGAR:
    - El subdirectorio
        add_subdirectory(lcd_i2c)
    - La target_link_libraries
        target_link_libraries(.... lcd_i2c)
- En el archivo main.c incluir el archivo lcd_i2c.h
    #include "lcd_i2c.h"
- Crear una variable del tipo lcd_i2c_t (estructura de datos), por ejemplo:
    lcd_i2c_t lcd;
Estos últimos dos ítems quedarían así:
/* -------------------------------------------------------------------- */

#include "lcd_i2c.h"
lcd_i2c_t lcd;           //Estructura que define la configuración del HW del conjunto RTC-MEM

/* -------------------------------------------------------------------- */

- En el código, inicializar los campos de dicha estructura con los datos propios de la implementación de HW.

- Defines del hardware (en hardware.h)
    /* Puerto I2C (i2c0 o i2c1) */
    #define I2C_INST i2c0                   //Posibles opciones, i2c0 o i2c1
    /* GPIOs usados para I2C */
    #define I2C_SDA_GPIO 4                  //Ver el pinout para las distintas posibilidades
    #define I2C_SCL_GPIO 5
    /* Velocidad I2C (en Hz) */
    #define I2C_BAUDRATE 400000             //En Hz, puede funcionar a 100KHz (100000) o 400KHz (400000)
    /* Cantidad de líneas (renglones) */
    #define LCD_LINE_QTY LCD_LINE_QTY_2     //Para LCD de 2 líneas, puede ser también 1 o 4 líneas

- En el main.c
    - Si se inicializa el I2C en el main (xque habrán otros dispositivos por ejemplo)
        lcd.i2c_inst_init = true;

    - Y completar estos datos en la estructura de configuración
        lcd.i2c_inst = I2C_INST;
        lcd.sda_gpio = I2C_SDA_GPIO;
        lcd.scl_gpio = I2C_SCL_GPIO;
        lcd.i2c_baudrate = I2C_BAUDRATE;
        lcd.lcd_lines = LCD_LINE_QTY;

    - Llamar SIEMPRE a la inicialización (que además inicializa I2C si lcd.i2c_inst_init = false)
        lcd_i2c_init((lcd_i2c_t*)(&lcd));

/* -------------------------------------------------------------------- */
